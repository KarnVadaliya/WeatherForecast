{"ast":null,"code":"var _jsxFileName = \"/Users/karnvadaliya/weatherapp/src/components/threehourly.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nclass threehourly extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.convertTime = time => {\n      const currTime = time.split(':');\n      var timeOfDay = \"\";\n      if (currTime[0] < 12) timeOfDay = \"AM\";else timeOfDay = \"PM\";\n      return currTime + \" \" + timeOfDay;\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    var dateArray = this.props.location.state.date.split(' ');\n    var dayList = [];\n    var j = 0;\n\n    for (var i = 0; i < this.props.days.length; i++) {\n      const currDateArray = this.props.days[i].dt_txt.split(' ');\n\n      if (currDateArray[0] === dateArray[0]) {\n        dayList[j] = this.props.days[i];\n        j++;\n      }\n    }\n\n    var timeOfDay = [];\n    var k = 0;\n\n    for (var i = 0; i < dayList.length; i++) {\n      const currDate = dayList[i].dt_txt.split(' ');\n      const currTime = currDate[1].split(':');\n      if (currTime) console.log(currDate);\n    }\n\n    console.log(dayList);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"helelle\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n    current: state.current,\n    days: state.days\n  };\n};\n\nexport default connect(mapStateToProps)(threehourly);","map":{"version":3,"sources":["/Users/karnvadaliya/weatherapp/src/components/threehourly.js"],"names":["React","Component","axios","moment","connect","threehourly","convertTime","time","currTime","split","timeOfDay","componentDidMount","render","dateArray","props","location","state","date","dayList","j","i","days","length","currDateArray","dt_txt","k","currDate","console","log","mapStateToProps","city","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAmC;AAAA;AAAA;;AAAA,SAM/BK,WAN+B,GAMlBC,IAAD,IAAQ;AAChB,YAAMC,QAAQ,GAACD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAf;AACA,UAAIC,SAAS,GAAC,EAAd;AACA,UAAIF,QAAQ,CAAC,CAAD,CAAR,GAAY,EAAhB,EACIE,SAAS,GAAC,IAAV,CADJ,KAGIA,SAAS,GAAC,IAAV;AAEJ,aAAOF,QAAQ,GAAC,GAAT,GAAaE,SAApB;AACH,KAf8B;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAE,CAElB;;AAaDC,EAAAA,MAAM,GAAE;AACR,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,IAA1B,CAA+BR,KAA/B,CAAqC,GAArC,CAAhB;AACA,QAAIS,OAAO,GAAC,EAAZ;AACA,QAAIC,CAAC,GAAC,CAAN;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKN,KAAL,CAAWO,IAAX,CAAgBC,MAA9B,EAAqCF,CAAC,EAAtC,EACA;AACI,YAAMG,aAAa,GAAC,KAAKT,KAAL,CAAWO,IAAX,CAAgBD,CAAhB,EAAmBI,MAAnB,CAA0Bf,KAA1B,CAAgC,GAAhC,CAApB;;AACA,UAAGc,aAAa,CAAC,CAAD,CAAb,KAAmBV,SAAS,CAAC,CAAD,CAA/B,EACA;AACIK,QAAAA,OAAO,CAACC,CAAD,CAAP,GAAW,KAAKL,KAAL,CAAWO,IAAX,CAAgBD,CAAhB,CAAX;AACAD,QAAAA,CAAC;AACJ;AACJ;;AAGD,QAAIT,SAAS,GAAE,EAAf;AACA,QAAIe,CAAC,GAAC,CAAN;;AACA,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,OAAO,CAACI,MAAtB,EAA6BF,CAAC,EAA9B,EACA;AAEI,YAAMM,QAAQ,GAACR,OAAO,CAACE,CAAD,CAAP,CAAWI,MAAX,CAAkBf,KAAlB,CAAwB,GAAxB,CAAf;AACA,YAAMD,QAAQ,GAACkB,QAAQ,CAAC,CAAD,CAAR,CAAYjB,KAAZ,CAAkB,GAAlB,CAAf;AACA,UAAID,QAAJ,EACAmB,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AAEI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CADJ;AAKH;;AAlD8B;;AAwDnC,MAAMW,eAAe,GAAIb,KAAD,IAAS;AAC7B,SAAM;AACFc,IAAAA,IAAI,EAACd,KAAK,CAACc,IADT;AAEFC,IAAAA,OAAO,EAACf,KAAK,CAACe,OAFZ;AAGFV,IAAAA,IAAI,EAACL,KAAK,CAACK;AAHT,GAAN;AAKH,CAND;;AAQA,eAAejB,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nclass threehourly extends Component{\n   \n    componentDidMount(){\n       \n    }\n\n    convertTime=(time)=>{\n        const currTime=time.split(':')\n        var timeOfDay=\"\"\n        if (currTime[0]<12)\n            timeOfDay=\"AM\"\n        else\n            timeOfDay=\"PM\"\n\n        return currTime+\" \"+timeOfDay\n    }\n\n    render(){\n    var dateArray = this.props.location.state.date.split(' ')\n    var dayList=[]\n    var j=0\n    for(var i=0;i<this.props.days.length;i++)\n    {\n        const currDateArray=this.props.days[i].dt_txt.split(' ')\n        if(currDateArray[0]===dateArray[0])\n        {\n            dayList[j]=this.props.days[i]\n            j++\n        }\n    }\n\n\n    var timeOfDay =[]\n    var k=0\n    for(var i=0;i<dayList.length;i++)\n    {\n        \n        const currDate=dayList[i].dt_txt.split(' ')\n        const currTime=currDate[1].split(':')\n        if (currTime)\n        console.log(currDate)\n    }\n\n    console.log(dayList)\n   \n        return(\n            <div>\n            <p>helelle</p>\n            </div>\n        )\n    }\n\n\n}\n\n\nconst mapStateToProps = (state)=>{\n    return{\n        city:state.city,\n        current:state.current,\n        days:state.days\n    }\n}\n\nexport default connect(mapStateToProps)(threehourly)"]},"metadata":{},"sourceType":"module"}