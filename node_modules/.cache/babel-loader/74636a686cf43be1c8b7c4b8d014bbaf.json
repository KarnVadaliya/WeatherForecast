{"ast":null,"code":"var _jsxFileName = \"/Users/karnvadaliya/weatherapp/src/components/weather.js\";\nimport react, { Component } from 'react';\nimport moment from 'moment';\nimport { render } from '@testing-library/react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass weather extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.props.updateCity(e.target.value);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n        this.props.updateDays(res.data.list);\n      }).catch(error => {\n        this.props.updateDays([]);\n        this.props.updateCurrent({\n          temp: '-',\n          icon: '-',\n          wind: '-',\n          feels_like: '-'\n        });\n      });\n      fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n        this.props.updateCurrent({\n          temp: res.data.main.temp,\n          icon: res.data.weather[0].icon,\n          wind: res.data.wind.speed,\n          feels_like: res.data.main.feels_like\n        });\n      }).catch(error => {\n        this.props.updateDays([]);\n        this.props.updateCurrent({\n          temp: '-',\n          icon: '-',\n          wind: '-',\n          feels_like: '-'\n        });\n      });\n      console.log(this.props);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n      this.props.updateDays(res.data.list);\n    });\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n      this.props.updateCurrent({\n        temp: res.data.main.temp,\n        icon: res.data.weather[0].icon,\n        wind: res.data.wind.speed,\n        feels_like: res.data.main.feels_like\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n    current: state.current,\n    days: state.days\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCity: city => {\n      dispatch({\n        type: 'UPDATE_CITY',\n        city: city\n      });\n    },\n    updateCurrent: current => {\n      dispatch({\n        type: 'UPDATE_CURRENT',\n        current: current\n      });\n    },\n    updateDays: days => {\n      dispatch({\n        type: 'UPDATE_DAYS',\n        days: days\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(weather);","map":{"version":3,"sources":["/Users/karnvadaliya/weatherapp/src/components/weather.js"],"names":["react","Component","moment","render","connect","Link","weather","constructor","props","handleChange","e","updateCity","target","value","handleSubmit","preventDefault","fetch","city","then","res","updateDays","data","list","catch","error","updateCurrent","temp","icon","wind","feels_like","main","speed","console","log","componentDidMount","mapStateToProps","state","current","days","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import react,{Component} from 'react';\nimport moment from 'moment';\nimport { render } from '@testing-library/react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nclass weather extends Component{\n    \n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount(){\n        fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                this.props.updateDays(res.data.list);\n            })\n\n        fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                this.props.updateCurrent({temp: res.data.main.temp, icon:res.data.weather[0].icon, wind:res.data.wind.speed, feels_like:res.data.main.feels_like})\n            })\n    }\n\n    handleChange=(e)=>{\n        this.props.updateCity(e.target.value)\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                this.props.updateDays(res.data.list);\n                \n            }).catch(error=>{\n                this.props.updateDays([])\n                this.props.updateCurrent({temp: '-', icon: '-', wind: '-', feels_like:'-'})\n            });\n\n        fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                this.props.updateCurrent({temp: res.data.main.temp, \n                                          icon:res.data.weather[0].icon, \n                                          wind:res.data.wind.speed, \n                                          feels_like:res.data.main.feels_like})\n            }).catch(error=>{\n                this.props.updateDays([])\n                this.props.updateCurrent({temp: '-', icon: '-', wind: '-', feels_like:'-'})\n            })\n\n        console.log(this.props)\n    }\n\n    render(){\n        return(\n            <div>\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <input type=\"text\" onChange={this.handleChange}/>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        city:state.city,\n        current:state.current,\n        days:state.days\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        updateCity: (city)=>{dispatch({type:'UPDATE_CITY',city:city})},\n        updateCurrent: (current)=>{dispatch({type:'UPDATE_CURRENT',current:current})},\n        updateDays: (days)=>{dispatch({type:'UPDATE_DAYS',days:days})}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(weather)"]},"metadata":{},"sourceType":"module"}