{"ast":null,"code":"var _jsxFileName = \"/Users/karnvadaliya/weatherapp/src/components/threehourly.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport BrowserHistory from 'react-router/lib/BrowserHistory';\n\nclass threehourly extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = e => {\n      this.props.history.push(\"/\");\n    };\n\n    this.convertTime = time => {\n      // Check correct time format and split into components\n      time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n      if (time.length > 1) {\n        // If time format correct\n        time = time.slice(1); // Remove full string match value\n\n        time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\n        time[0] = +time[0] % 12 || 12; // Adjust hours\n      }\n\n      console.log(time);\n      return time[0] + \" \" + time[5]; // return adjusted time or original string\n    };\n  }\n\n  render() {\n    var dateArray = this.props.location.state.date.split(' ');\n    var dayList = [];\n    var j = 0;\n\n    for (var i = 0; i < this.props.days.length; i++) {\n      const currDateArray = this.props.days[i].dt_txt.split(' ');\n\n      if (currDateArray[0] === dateArray[0]) {\n        dayList[j] = this.props.days[i];\n        j++;\n      }\n    }\n\n    const allTimes = dayList.length ? dayList.map(day => {\n      return React.createElement(\"div\", {\n        className: \"col s12 m3\",\n        key: day.dt_txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flexBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"timeDay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.convertTime(day.dt_txt.split(' ')[1])), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"card-title bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, day.weather[0].main), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\",\n        alt: \"weather_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, day.main.temp, \"\\xB0\"), \"F\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Feels like:\"), \" \", day.main.feels_like, \"\\xB0F\"))));\n    }) : React.createElement(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: BrowserHistory.goBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faChevronLeft,\n      style: {\n        fontSize: \"50px\",\n        color: \"darkblue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, moment(this.props.location.state.date).format(\"dddd, MMMM Do YYYY\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, allTimes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n    current: state.current,\n    days: state.days\n  };\n};\n\nexport default connect(mapStateToProps)(threehourly);","map":{"version":3,"sources":["/Users/karnvadaliya/weatherapp/src/components/threehourly.js"],"names":["React","Component","moment","connect","FontAwesomeIcon","faChevronLeft","BrowserHistory","threehourly","handleClick","e","props","history","push","convertTime","time","toString","match","length","slice","console","log","render","dateArray","location","state","date","split","dayList","j","i","days","currDateArray","dt_txt","allTimes","map","day","weather","main","icon","temp","feels_like","display","goBack","fontSize","color","format","mapStateToProps","city","current"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport BrowserHistory from 'react-router/lib/BrowserHistory'\n\nclass threehourly extends Component{\n   \n    handleClick = (e) =>{\n         this.props.history.push(\"/\")\n     }\n\n    convertTime = (time) =>{\n        // Check correct time format and split into components\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) { // If time format correct\n            time = time.slice (1);  // Remove full string match value\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n            time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        console.log(time);\n        return time[0]+\" \"+time[5]; // return adjusted time or original string\n    }\n\n    render(){\n    var dateArray = this.props.location.state.date.split(' ')\n    var dayList=[]\n    var j=0\n    for(var i=0;i<this.props.days.length;i++)\n    {\n        const currDateArray=this.props.days[i].dt_txt.split(' ')\n        if(currDateArray[0]===dateArray[0])\n        {\n            dayList[j]=this.props.days[i]\n            j++\n        }\n    }\n\n\n\n    const allTimes = dayList.length?(\n        dayList.map(day=>{\n            return(\n                <div className=\"col s12 m3\" key={day.dt_txt}>\n                <div className=\"flexBox\">\n                   <div className=\"timeDay\">\n                        \n                            <h5>{this.convertTime(day.dt_txt.split(' ')[1])}</h5>\n                            <br></br>\n                            <span className=\"card-title bold\">{day.weather[0].main}</span>\n                            <br></br>\n                            <img src={\"http://openweathermap.org/img/wn/\"+day.weather[0].icon+\"@2x.png\"} alt=\"weather_icon\" />\n                            <br></br>\n                            <h5><strong>{day.main.temp}&deg;</strong>F</h5>\n                            <br></br>\n                            <h5><p>Feels like:</p> {day.main.feels_like}&deg;F</h5>\n                        \n                        </div>\n                        </div>\n                </div>\n            )\n    })):(<div style={{display:\"none\"}}>\n    </div>)\n   \n        return(\n            <div className=\"container\">\n            <button onClick={BrowserHistory.goBack}>\n            <FontAwesomeIcon icon={faChevronLeft} style={\n                {\n                    fontSize: \"50px\",\n                    color: \"darkblue\"\n                }\n            }/></button>\n                <h4>{moment(this.props.location.state.date).format(\"dddd, MMMM Do YYYY\")}</h4>\n                <div className=\"row\">\n                    {allTimes}\n                </div>    \n            </div>\n        )\n    }\n\n\n}\n\n\nconst mapStateToProps = (state)=>{\n    return{\n        city:state.city,\n        current:state.current,\n        days:state.days\n    }\n}\n\nexport default connect(mapStateToProps)(threehourly)"]},"metadata":{},"sourceType":"module"}