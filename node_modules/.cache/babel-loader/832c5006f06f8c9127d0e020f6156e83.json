{"ast":null,"code":"var _jsxFileName = \"/Users/karnvadaliya/weatherapp/src/components/threehourly.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nclass threehourly extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.convertTime = time => {\n      var currTime = time.split(':');\n      var timeOfDay = \"\";\n      if (currTime[0] < 12) timeOfDay = \"AM\";else {\n        timeOfDay = \"PM\";\n        currTime = currTime % 12;\n      }\n      return currTime + \" \" + timeOfDay;\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    var dateArray = this.props.location.state.date.split(' ');\n    var dayList = [];\n    var j = 0;\n\n    for (var i = 0; i < this.props.days.length; i++) {\n      const currDateArray = this.props.days[i].dt_txt.split(' ');\n\n      if (currDateArray[0] === dateArray[0]) {\n        dayList[j] = this.props.days[i];\n        j++;\n      }\n    }\n\n    const dayCards = tempDay.length ? tempDay.map(day => {\n      return React.createElement(\"div\", {\n        className: \"col s12 m3\",\n        key: day.dt_txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card opacity medium blue darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, console.log(day.weather[0].main), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.tConvert(day.dt_txt.split(' ')[1])), React.createElement(\"span\", {\n        className: \"card-title bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, day.weather[0].main), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, day.main.temp, \"\\xB0\"), \" \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"F\")), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Feels like: \", day.main.feels_like, \"\\xB0 \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"F\")))));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"No posts yet\");\n    const allTimes = dayList.length ? dayList.map(day => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.convertTime(day.dt_txt.split(' ')[1])), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, day.weather[0].main), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, day.main.temp), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, day.main.feels_like));\n    }) : React.createElement(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"helelle\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n    current: state.current,\n    days: state.days\n  };\n};\n\nexport default connect(mapStateToProps)(threehourly);","map":{"version":3,"sources":["/Users/karnvadaliya/weatherapp/src/components/threehourly.js"],"names":["React","Component","axios","moment","connect","threehourly","convertTime","time","currTime","split","timeOfDay","componentDidMount","render","dateArray","props","location","state","date","dayList","j","i","days","length","currDateArray","dt_txt","dayCards","tempDay","map","day","console","log","weather","main","tConvert","icon","temp","feels_like","allTimes","display","mapStateToProps","city","current"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nclass threehourly extends Component{\n   \n    componentDidMount(){\n       \n    }\n\n    convertTime=(time)=>{\n        var currTime=time.split(':')\n        var timeOfDay=\"\"\n        if (currTime[0]<12)\n            timeOfDay=\"AM\"\n        else\n        {\n            timeOfDay=\"PM\"\n            currTime=currTime%12\n        }\n\n        return currTime+\" \"+timeOfDay\n    }\n\n    render(){\n    var dateArray = this.props.location.state.date.split(' ')\n    var dayList=[]\n    var j=0\n    for(var i=0;i<this.props.days.length;i++)\n    {\n        const currDateArray=this.props.days[i].dt_txt.split(' ')\n        if(currDateArray[0]===dateArray[0])\n        {\n            dayList[j]=this.props.days[i]\n            j++\n        }\n    }\n\n\n\n\n\n    const dayCards = tempDay.length ? (\n        tempDay.map(day=>{\n            return(\n                <div className=\"col s12 m3\" key={day.dt_txt}>\n                    <div className=\"card opacity medium blue darken-1\">\n                        <div className=\"card-content white-text\">\n                        {console.log(day.weather[0].main)}\n                            <h5>{this.tConvert(day.dt_txt.split(' ')[1])}</h5>\n                            <span className=\"card-title bold\">{day.weather[0].main}</span>\n                            <img src={\"http://openweathermap.org/img/wn/\"+day.weather[0].icon+\"@2x.png\"} />\n                            \n                            <h5><strong>{day.main.temp}&deg;</strong> <small>F</small></h5>\n                            <h5>Feels like: {day.main.feels_like}&deg; <small>F</small></h5>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    ):(\n         <div className=\"center\">No posts yet</div>\n    );\n\n\n\n\n\n\n    const allTimes = dayList.length?(\n        dayList.map(day=>{\n            return(\n                <div>\n                <p>{this.convertTime(day.dt_txt.split(' ')[1])}</p>\n                <p>{day.weather[0].main}</p>\n                <img src={\"http://openweathermap.org/img/wn/\"+day.weather[0].icon+\"@2x.png\"} />\n                <p>{day.main.temp}</p>\n                <p>{day.main.feels_like}</p>\n                </div>\n            )\n    })):(<div style={{display:\"none\"}}>\n    </div>)\n   \n        return(\n            <div>\n            <p>helelle</p>\n            </div>\n        )\n    }\n\n\n}\n\n\nconst mapStateToProps = (state)=>{\n    return{\n        city:state.city,\n        current:state.current,\n        days:state.days\n    }\n}\n\nexport default connect(mapStateToProps)(threehourly)"]},"metadata":{},"sourceType":"module"}