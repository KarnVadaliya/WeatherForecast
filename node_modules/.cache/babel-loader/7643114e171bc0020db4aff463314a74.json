{"ast":null,"code":"var _jsxFileName = \"/Users/karnvadaliya/weatherapp/src/components/weather.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass weather extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      this.props.updateCity(e.target.value);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.get(\"http://api.openweathermap.org/data/2.5/forecast?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n        this.props.updateDays(res.data.list);\n      }).catch(error => {\n        this.props.updateDays([]);\n        this.props.updateCurrent({\n          temp: '-',\n          icon: '-',\n          wind: '-',\n          feels_like: '-'\n        });\n      });\n      axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n        console.log(res.data.main.temp);\n        this.props.updateCurrent({\n          temp: res.data.main.temp,\n          icon: res.data.weather[0].icon,\n          wind: res.data.wind.speed,\n          feels_like: res.data.main.feels_like\n        });\n      }).catch(error => {\n        this.props.updateDays([]);\n        this.props.updateCurrent({\n          temp: '-',\n          icon: '-',\n          wind: '-',\n          feels_like: '-'\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.city);\n    axios.get(\"http://api.openweathermap.org/data/2.5/forecast?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n      console.log(res.data.list);\n      this.props.updateDays(res.data.list);\n    });\n    axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.city + \"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\").then(res => {\n      console.log(res);\n      this.props.updateCurrent({\n        temp: res.data.main.temp,\n        icon: res.data.weather[0].icon,\n        wind: res.data.wind.speed,\n        feels_like: res.data.main.feels_like\n      });\n    });\n  }\n\n  render() {\n    const dayList = [];\n    var j = 0;\n    var highestTemp = -1000;\n    var lowestTemp = 1000;\n\n    for (var i = 0; i < this.props.days.length; i++) {\n      if (this.props.days[i].main.temp > highestTemp) highestTemp = this.props.days[i].main.temp;\n      if (this.props.days[i].main.temp < lowestTemp) lowestTemp = this.props.days[i].main.temp;\n\n      if (i === 6 || i === 14 || i === 22 || i === 30 || i === 38) {\n        dayList[j] = {\n          dt_txt: this.props.days[i].dt_txt,\n          high: highestTemp,\n          low: lowestTemp,\n          icn: this.props.days[i].weather[0].icon\n        };\n        j++;\n        highestTemp = -1000;\n        lowestTemp = 1000;\n      }\n    }\n\n    const forecast = dayList.length ? dayList.map(day => {\n      return React.createElement(\"div\", {\n        className: \"day\",\n        key: day.dt_txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: `/${moment(day.dt_txt).format('dddd')}`,\n          state: {\n            date: day.dt_txt\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, moment(day.dt_txt).format('ddd')), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.icn + \"@2x.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"High: \\u2191 \", day.high, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Low: \\u2193 \", day.low, \"\\xB0 F\")));\n    }) : React.createElement(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"col s12\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      className: \"validate\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"city\",\n      className: \"active\",\n      style: {\n        fontSize: \"20px\",\n        color: \"black\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Enter a City\")))), React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"p\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.props.city), React.createElement(\"p\", {\n      className: \"temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.props.current.temp, \"\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"F\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"feels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Feels like:\")), this.props.current.feels_like, \"\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"F\"))), React.createElement(\"p\", {\n      className: \"wind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Wind:\")), \" \", this.props.current.wind, \" miles/hour\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"http://openweathermap.org/img/wn/\" + this.props.current.icon + \"@2x.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"future\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, forecast));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n    current: state.current,\n    days: state.days\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCity: city => {\n      dispatch({\n        type: 'UPDATE_CITY',\n        city: city\n      });\n    },\n    updateCurrent: current => {\n      dispatch({\n        type: 'UPDATE_CURRENT',\n        current: current\n      });\n    },\n    updateDays: days => {\n      dispatch({\n        type: 'UPDATE_DAYS',\n        days: days\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(weather);","map":{"version":3,"sources":["/Users/karnvadaliya/weatherapp/src/components/weather.js"],"names":["React","Component","moment","connect","axios","Link","weather","handleChange","e","props","updateCity","target","value","handleSubmit","preventDefault","get","city","then","res","updateDays","data","list","catch","error","updateCurrent","temp","icon","wind","feels_like","console","log","main","speed","componentDidMount","render","dayList","j","highestTemp","lowestTemp","i","days","length","dt_txt","high","low","icn","forecast","map","day","pathname","format","state","date","display","fontSize","color","textAlign","current","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass weather extends Component{\n    \n    componentDidMount(){\n        console.log(this.props.city);\n        axios.get(\"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                console.log(res.data.list);\n                this.props.updateDays(res.data.list);\n            })\n\n        axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                console.log(res);\n                this.props.updateCurrent({temp: res.data.main.temp, icon:res.data.weather[0].icon, wind:res.data.wind.speed, feels_like:res.data.main.feels_like})\n            })\n    }\n\n    handleChange=(e)=>{\n        this.props.updateCity(e.target.value)\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        axios.get(\"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                this.props.updateDays(res.data.list)\n                \n            }).catch(error=>{\n                this.props.updateDays([])\n                this.props.updateCurrent({temp: '-', icon: '-', wind: '-', feels_like:'-'})\n            });\n\n        axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=\"+this.props.city+\"&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial\")\n            .then(res=>{\n                console.log(res.data.main.temp)\n                this.props.updateCurrent({temp: res.data.main.temp, \n                                          icon:res.data.weather[0].icon, \n                                          wind:res.data.wind.speed, \n                                          feels_like:res.data.main.feels_like})\n            }).catch(error=>{\n                this.props.updateDays([])\n                this.props.updateCurrent({temp: '-', icon: '-', wind: '-', feels_like:'-'})\n            })\n\n       \n    }\n\n    render(){\n        const dayList=[]\n        var j=0\n        var highestTemp=-1000\n        var lowestTemp=1000\n       \n        for(var i=0;i<this.props.days.length;i++)\n        {\n            if(this.props.days[i].main.temp>highestTemp)\n                highestTemp=this.props.days[i].main.temp\n            if(this.props.days[i].main.temp<lowestTemp)\n                lowestTemp=this.props.days[i].main.temp\n            if(i===6 || i===14 || i===22 || i===30 || i===38)\n            {\n                dayList[j]={dt_txt:this.props.days[i].dt_txt,high:highestTemp,low:lowestTemp,icn:this.props.days[i].weather[0].icon}\n                j++\n                highestTemp=-1000\n                lowestTemp=1000\n            }\n        }\n\n\n        const forecast = dayList.length?(dayList.map(day=>{return (\n            <div className=\"day\" key={day.dt_txt}>\n                <Link to={{ pathname: `/${moment(day.dt_txt).format('dddd')}`, state:{date:day.dt_txt}}}>\n                    <h3>{moment(day.dt_txt).format('ddd')}</h3>\n                    <img src={\"http://openweathermap.org/img/wn/\"+day.icn+\"@2x.png\"} />\n                    <p>High: &#8593; {day.high}&deg; F</p>\n                    <p>Low: &#8595; {day.low}&deg; F</p>\n                </Link>\n            </div>\n        )})):(<div style={{display:\"none\"}}>\n            </div>)\n\n           \n\n        return(\n           \n\n\n            <div className=\"container\">\n            <br/>\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s4 offset-s4\">     \n                            <input id=\"city\" type=\"text\" className=\"validate\" onChange={this.handleChange}></input>\n                            <label htmlFor=\"city\" className=\"active\" style={{\n                                fontSize: \"20px\",\n                                color: \"black\",\n                                textAlign: \"center\"\n                            }}>Enter a City</label>\n                        </div>\n                    </div>\n                </form>\n                        <div className=\"weather\">\n                            <div className=\"current\">\n                                <div className=\"info\">\n                                    <p>&nbsp;</p>\n                                    <p className=\"city\">{this.props.city}</p>\n                                    <p className=\"temp\">{this.props.current.temp}&deg; <small>F</small><br/>\n                                    <span className=\"feels\"><small><small>Feels like:</small></small>{this.props.current.feels_like}&deg; <small>F</small></span>\n                                    </p>\n                                    <p className=\"wind\"><small><small>Wind:</small></small> {this.props.current.wind} miles/hour</p>\n                                    <p>&nbsp;</p>\n                                </div>\n                                <div className=\"icon\">\n                                    <img src={\"http://openweathermap.org/img/wn/\"+this.props.current.icon+\"@2x.png\"} />\n                                </div>\n                            </div>\n                        </div>\n                <div className=\"future\">\n                                {forecast}\n                            </div>\n            </div>\n            \n\n\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        city:state.city,\n        current:state.current,\n        days:state.days\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        updateCity: (city)=>{dispatch({type:'UPDATE_CITY',city:city})},\n        updateCurrent: (current)=>{dispatch({type:'UPDATE_CURRENT',current:current})},\n        updateDays: (days)=>{dispatch({type:'UPDATE_DAYS',days:days})}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(weather)"]},"metadata":{},"sourceType":"module"}